// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Kowabunga API
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.53.1
 * Contact: maintainers@kowabunga.cloud
 */

package sdk




// Konvey - A Kowabunga Konvey is a layer-4 network load-balancer used to distribute service requests to associated backend instances.
type Konvey struct {

	// The Konvey (Kowabunga Network Load-Balancer) ID (auto-generated).
	Id string `json:"id,omitempty"`

	// The Konvey (Kowabunga Network Load-Balancer) name.
	Name string `json:"name,omitempty"`

	// The Konvey (Kowabunga Network Load-Balancer) description.
	Description string `json:"description,omitempty"`

	// The Konvey (Kowabunga Network Load-Balancer) assigned private virtual IP address (read-only).
	Vip string `json:"vip,omitempty"`

	// Whether Konvey (Kowabunga Network Load-Balancer) must be deployed in a highly-available replicated state to support service failover.
	Failover bool `json:"failover,omitempty"`

	// The Konvey (Kowabunga Network Load-Balancer) list of load-balanced endpoints.
	Endpoints []KonveyEndpoint `json:"endpoints"`
}

// AssertKonveyRequired checks if the required fields are not zero-ed
func AssertKonveyRequired(obj Konvey) error {
	elements := map[string]interface{}{
		"endpoints": obj.Endpoints,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Endpoints {
		if err := AssertKonveyEndpointRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertKonveyConstraints checks if the values respects the defined constraints
func AssertKonveyConstraints(obj Konvey) error {
	for _, el := range obj.Endpoints {
		if err := AssertKonveyEndpointConstraints(el); err != nil {
			return err
		}
	}
	return nil
}

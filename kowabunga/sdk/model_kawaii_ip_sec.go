// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Kowabunga API documentation
 *
 * Kvm Orchestrator With A BUNch of Goods Added
 *
 * API version: 0.52.5
 * Contact: maintainers@kowabunga.cloud
 */

package sdk




// KawaiiIpSec - A Kawaii IPsec connection.
type KawaiiIpSec struct {

	// The Kawaii IPsec connection ID (auto-generated).
	Id string `json:"id,omitempty"`

	// The Kawaii IPsec connection name.
	Name string `json:"name"`

	// The Kawaii IPsec connection description.
	Description string `json:"description,omitempty"`

	// The Kawaii IPsec connection IPSec IP.
	Ip string `json:"ip,omitempty"`

	// The Kawaii IPsec connection remote peer VPN Gateway.
	RemoteIp string `json:"remote_ip"`

	// The Kawaii IPsec connection remote subnet.
	RemoteSubnet string `json:"remote_subnet"`

	// The Kawaii IPsec connection pre-shared key(PSK).
	PreSharedKey string `json:"pre_shared_key"`

	// The Kawaii IPsec connection Dead Peer Detection Action (clear,restart or trap).
	DpdTimeoutAction string `json:"dpd_timeout_action,omitempty"`

	// The Kawaii IPsec connection Dead Peer Detection Timeout.
	DpdTimeout string `json:"dpd_timeout,omitempty"`

	// The Kawaii IPsec connection start action (none, start, trap).
	StartAction string `json:"start_action,omitempty"`

	// The Kawaii IPsec connection rekey time. Default is 2h.
	RekeyTime string `json:"rekey_time,omitempty"`

	// The Kawaii IPsec connection Lifetime for phase 1 negociation. Default is 1h.
	Phase1Lifetime string `json:"phase1_lifetime,omitempty"`

	// The Kawaii IPsec connection phase 1 Diffie Hellman IANA algorithm.
	Phase1DhGroupNumber int64 `json:"phase1_dh_group_number"`

	// The Kawaii IPsec connection phase 1 integrity algorithm..
	Phase1IntegrityAlgorithm string `json:"phase1_integrity_algorithm"`

	// The Kawaii IPsec connection phase 1 encryption algorithm..
	Phase1EncryptionAlgorithm string `json:"phase1_encryption_algorithm"`

	// The Kawaii IPsec connection Lifetime for phase 2 negociation. Default is 1h.
	Phase2Lifetime string `json:"phase2_lifetime,omitempty"`

	// The Kawaii IPsec connection phase 2 Diffie Hellman IANA algorithm.
	Phase2DhGroupNumber int64 `json:"phase2_dh_group_number"`

	// The Kawaii IPsec connection phase 2 integrity algorithm..
	Phase2IntegrityAlgorithm string `json:"phase2_integrity_algorithm"`

	// The Kawaii IPsec connection phase 2 encryption algorithm..
	Phase2EncryptionAlgorithm string `json:"phase2_encryption_algorithm"`

	Firewall KawaiiFirewall `json:"firewall,omitempty"`
}

// AssertKawaiiIpSecRequired checks if the required fields are not zero-ed
func AssertKawaiiIpSecRequired(obj KawaiiIpSec) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"remote_ip": obj.RemoteIp,
		"remote_subnet": obj.RemoteSubnet,
		"pre_shared_key": obj.PreSharedKey,
		"phase1_dh_group_number": obj.Phase1DhGroupNumber,
		"phase1_integrity_algorithm": obj.Phase1IntegrityAlgorithm,
		"phase1_encryption_algorithm": obj.Phase1EncryptionAlgorithm,
		"phase2_dh_group_number": obj.Phase2DhGroupNumber,
		"phase2_integrity_algorithm": obj.Phase2IntegrityAlgorithm,
		"phase2_encryption_algorithm": obj.Phase2EncryptionAlgorithm,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	if err := AssertKawaiiFirewallRequired(obj.Firewall); err != nil {
		return err
	}
	return nil
}

// AssertKawaiiIpSecConstraints checks if the values respects the defined constraints
func AssertKawaiiIpSecConstraints(obj KawaiiIpSec) error {
	if err := AssertKawaiiFirewallConstraints(obj.Firewall); err != nil {
		return err
	}
	return nil
}
